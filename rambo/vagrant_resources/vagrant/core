# -*- mode: ruby -*-
# vi: set ft=ruby :

# Set target based on cli args. Defaults to empty string.
target = if ENV[PROJECT_NAME + "_PROVIDER"]
           ENV[PROJECT_NAME + "_PROVIDER"]
         elsif read_provider_file()
           read_provider_file()
         else
           'virtualbox'
         end

if (SETTINGS["PROVIDERS"].include? target)
  write_provider_file(target)
  load File.expand_path("vagrant_resources/vagrant/Vagrantfile." + target)
else # Bad arg - we don't have this provider.
  abort("ABORTED - Target not in providers list. Did you have a typo?")
end

hosts = ['debian-8',
         'ubuntu-1604',
        ]

VM_HOST = if ENV["VMHOST"]
          ENV["VMHOST"]
        else
        'debian-8'
        end

unless (hosts.include? VM_HOST)
   abort("ABORTED - VM host not in host list. Did you have a typo?")
end

sizes = ['512mb',
         '1024mb',
         '2048mb',
        ]

VM_SIZE = if ENV["VMSIZE"]
          ENV["VMSIZE"]
        else
        '1024mb'
        end

unless (sizes.include? VM_SIZE)
   abort("ABORTED - VM size not in sizes list. Did you have a typo?")
end

# clean up files on the host after the guest is destroyed
Vagrant.configure("2") do |config|
  config.trigger.after :destroy do
    puts "Vagrant done with destroy."
  end
end

#redundant code from LXC and VirtualBox vagrant files
Vagrant.configure("2") do |config|
  if COPY_DIR_WITH_RSYNC == true
    config.vm.synced_folder ".",
      "/vagrant",
      type: "rsync"
  else
    config.vm.synced_folder ".",
      "/vagrant",
      type: "rsync",
      disabled: true
  end
  config.vm.provision "shell",
    inline: "wget -O /etc/apt/sources.list https://raw.githubusercontent.com/terminal-labs/package-sources/master/" + VM_HOST + "/official/sources.list",
    keep_color: true
  if PROVISION_WITH_SALT
    config.vm.provision :salt do |salt|
      salt.bootstrap_options = "-P"
     salt.verbose = true
    end
    $pre_salt = <<-EOS
      mv /etc/salt/minion{,-dist}
      if [ target == "virtualbox" ]; then cp /vagrant/salt_resources/minions/minion.virtualbox /etc/salt/minion; fi
      if [ target == "lxc" ]; then cp /vagrant/salt_resources/minions/minion.lxc /etc/salt/minion; fi
      if [ target == "ec2" ]; then cp /vagrant/salt_resources/minions/minion.ec2 /etc/salt/minion; fi
      if [ target == 'digitalocean" ] then cp /vagrant/salt_resources/minions/minion.digitalocean /etc/salt/minion; fi
      if [ target == "docker" ]; then cp /vagrant/salt_resources/minions/minion.docker /etc/salt/minion; fi
      cp /vagrant/salt_resources/grains/grains /etc/salt/grains
      mkdir -p /vagrant/salt_resources/states/files/licenses
      if [ -d "/vagrant/auth/licenses/" ]; then cp -a /vagrant/auth/licenses/. /vagrant/salt_resources/states/files/licenses/; fi
      EOS
    config.vm.provision "shell",
      inline: $pre_salt,
      keep_color: true

    PROVISION_SALT_CMD = SET_HOSTNAME + "sudo SSH_AUTH_SOCK=$SSH_AUTH_SOCK salt-call --local state.highstate --log-level info"

    config.vm.provision "shell",
      inline: PROVISION_SALT_CMD,
      keep_color: true
  end
  if PROVISION_WITH_CMD
    config.vm.provision "shell",
      inline: PROVISION_CMD,
      keep_color: true
  end
end
